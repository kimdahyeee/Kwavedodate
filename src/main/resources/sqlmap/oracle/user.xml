<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="user">
	<insert id="insertUser">
		insert into users
		(userEmail, userPassword, userName, userRegdate, isSNS, userNation, authority
		<!--  phone, zipCode, address1, address2, city, region, country,  -->
		authority, enabled)
		values (#{userEmail}, #{userPassword}, #{userName}, sysdate, 0 , #{userNation}, #{authority}
		<!-- 'Nation', 'phone', 'zipCode', 'address1', 'address2', 'city', 'region', 'country', -->
		'ROLE_USER', 1)
	</insert>
	
	<insert id="insertFacebookUser">
		insert into users
		(userEmail, userPassword, userName, userRegdate, isSNS, userNation,
		authority, enabled)
		values (#{userEmail}, #{userPassword}, #{userName}, sysdate, 1 , #{userNation},
		'ROLE_USER', 1)
	</insert>

	<select id="selectIsSns" resultType="hashmap">
		SELECT 
		  ISSNS
		FROM 
			USERS
		WHERE 
			USEREMAIL = #{userEmail}
	</select>
	
	<update id="modifyUser">
		update 
			users
		set 
			userName = #{userName},
			phone = #{phone},
			userNation = #{userNation},
			authority = #{authority}
		where 
			userEmail = #{userEmail}
	</update>

	<update id="modifyAddress">
		update 
			users
		set 
			zipCode = #{zipCode},
			address1 = #{address1},
			address2 = #{address2},
			city = #{city},
			region = #{region},
			country = #{country}
		where 
			userEmail = #{userEmail}
	</update>
	
	<select id="selectEmail" resultType="map">
		SELECT
			userEmail
		FROM
			users
		WHERE
			userEmail = #{userEmail}
	</select>

	<select id="selectUser" resultType="map">
		SELECT
		userEmail as username,
		userPassword as password,
		enabled as enabled,
		authority as authority,
		username as user_name,
		usernation,
		phone,
		zipcode,
		address1,
		address2,
		city,
		region,
		country,
		isSns
		FROM USERS
		WHERE userEmail = #{username}
	</select>

	<select id="selectUserAccount" resultType="map">
		SELECT
		userEmail, username, usernation, phone, zipcode, address1, address2, city, isSns,
		region, country
		FROM users
		WHERE userEmail = #{username}
	</select>
	
	<!-- modify password -->
	<select id="selectPassword" resultType="map">
		SELECT
		userPassword as rowpassword
		FROM users
		WHERE userEmail = #{userEmail}
	</select>
	<update id="modifyPassword">
		UPDATE users
		SET userPassword = #{newPassword}
		WHERE userEmail = #{userEmail}
	</update>
	
	<insert id="insertDelivery">
		INSERT INTO delivery
		(imp_uid, phone, country, zipCode, address1, address2, city, region, shippingMethod, note, state)
		VALUES
		(#{imp_uid}, #{phone}, #{country}, #{zipCode}, #{address1}, #{address2}, #{city}, #{region}, #{shippingMethod}, #{note}, 'yet')
	</insert>
	
	<insert id="insertPayments">
		INSERT INTO payments
		(imp_uid, userEmail, campaignName, rewardNum, merchant_uid, totalAmount, shippingAmount, receipt_url, paid_at) 
		VALUES
		(#{imp_uid}, #{userEmail}, #{campaignName}, #{rewardNum}, #{merchant_uid}, #{totalAmount}, #{shippingAmount}, #{receipt_url}, sysdate) 
	
	</insert>
	
	<select id="selectHistoryList" resultType="hashmap">
		SELECT 
			P.IMP_UID AS PIMP_UID,
			P.TOTALAMOUNT AS PTOTALAMOUNT,
			P.RECEIPT_URL AS PRECEIPT_URL,
			TO_CHAR(P.PAID_AT,'YYYY-MM-DD HH24:MI') AS PPAID_AT,
			CASE 
	        	WHEN P.REWARDNUM = 0 THEN ''
	        	ELSE (SELECT RL.REWARDSUBJECT FROM REWARDS_${currentLocale} RL WHERE P.REWARDNUM = RL.REWARDNUM)
	    	END RREWARDSUBJECT,
			CL.CAMPAIGNSUBJECT as CCAMPAIGNSUBJECT,
			C.CAMPAIGNIMG as CCAMPAIGNIMG
		FROM 
			PAYMENTS P,
			CAMPAIGNS_${currentLocale} CL,
			CAMPAIGNS C
		WHERE 
			P.USEREMAIL = #{userEmail} AND 
			P.CAMPAIGNNAME = C.CAMPAIGNNAME AND 
			P.CAMPAIGNNAME = CL.CAMPAIGNNAME
	</select>
	
	<!-- ================================================== -->
	<resultMap type="map" id="completePaymentInfo">
		<result property="imp_uid" column="IMP_UID" javaType="java.lang.String"/>
		<result property="totalAmount" column="TOTALAMOUNT" javaType="java.lang.String"/>
		<result property="receipt_url" column="RECEIPT_URL" javaType="java.lang.String"/>
		<result property="paid_at" column="PAID_AT" javaType="java.lang.String"/>
		<result property="campaignImg" column="CAMPAIGNIMG" javaType="java.lang.String"/>
		<result property="campaignSubject" column="CAMPAIGNSUBJECT" javaType="java.lang.String"/>
		<result property="rewardSubject" column="REWARDSUBJECT" javaType="java.lang.String"/>		
	</resultMap>
	<select id="selectCompletePaymentInfo" resultMap="completePaymentInfo">
		SELECT 
		    P.IMP_UID AS IMP_UID,
		    P.TOTALAMOUNT AS TOTALAMOUNT,
		    P.RECEIPT_URL AS RECEIPT_URL,
		    TO_CHAR(P.PAID_AT,'YYYY-MM-DD HH24:MI') AS PAID_AT, 
		    C.CAMPAIGNIMG AS CAMPAIGNIMG, 
		    CL.CAMPAIGNSUBJECT AS CAMPAIGNSUBJECT, 
		    CASE
		        WHEN P.REWARDNUM = 0 THEN ''
		        ELSE (SELECT RL.REWARDSUBJECT FROM REWARDS_${locale} RL WHERE P.REWARDNUM = RL.REWARDNUM)
		    END REWARDSUBJECT
		FROM
		    PAYMENTS P,
		    CAMPAIGNS C,
		    CAMPAIGNS_${locale} CL
		WHERE
		    P.IMP_UID = #{imp_uid} AND
		    P.CAMPAIGNNAME = C.CAMPAIGNNAME AND
		    P.CAMPAIGNNAME = CL.CAMPAIGNNAME
	</select>
	<!-- ================================================== -->
	
	
	<update id="updateRewardsByPayment">
	UPDATE rewards
	SET rewardCurrentCnt = (rewardCurrentCnt - 1)
	WHERE ((campaignName = #{campaignName}) and (rewardNum = #{rewardNum}))
	</update>
	
	<update id="updateCampaignsByPayment">
	UPDATE campaigns
	SET gatherAmount = (gatherAmount + #{rewardAmount}),
		fundingUserCnt = (fundingUserCnt + 1)
	WHERE campaignName = #{campaignName}
	</update>
	
	<delete id="deletePayment">
		DELETE FROM PAYMENTS WHERE IMP_UID = #{imp_uid}
	</delete>
	
	<delete id="deleteDelivery">
		DELETE FROM DELIVERY WHERE IMP_UID = #{imp_uid}
	</delete>
	
	<update id="updateRewardsByPaymentPlus">
	UPDATE REWARDS
	SET REWARDCURRENTCNT = REWARDCURRENTCNT + 1
	WHERE REWARDNUM = #{rewardNum}
	</update>
	
	<update id="updateCampaignsByPaymentMinus">
	UPDATE CAMPAIGNS
	SET GATHERAMOUNT = GATHERAMOUNT - (SELECT TOTALAMOUNT FROM PAYMENTS WHERE IMP_UID = #{imp_uid}),
		FUNDINGUSERCNT = FUNDINGUSERCNT - 1
	WHERE CAMPAIGNNAME = (SELECT CAMPAIGNNAME FROM PAYMENTS WHERE IMP_UID = #{imp_uid})
	</update>
</mapper>